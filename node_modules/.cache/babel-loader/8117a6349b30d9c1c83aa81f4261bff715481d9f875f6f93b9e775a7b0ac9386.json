{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import'./App.css';import{act}from'react-dom/test-utils';// Random constants\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HORIZONTAL=0;const VERTICAL=1;const size=5;export const App=()=>{/* Snel kleurtjes aanpassen */const focussedCell=\"bg-orange-400\";const focussedRowCol=\"bg-orange-200\";/* ---------------- Constants ---------------- */const[loading,setLoading]=useState(true);const[puzzle,setPuzzle]=useState();const[direction,setDirection]=useState(HORIZONTAL);// 0 = Horizontal, 1 = Vertical\nconst inputsRef=useRef([]);// om refs naar alle inputs op te slaan\nconst[activeCell,setActiveCell]=useState({row:null,col:null});/* ---------------- Functions ---------------- *//* Sets new active cell after new focus */const handleFocus=(row,col)=>{setActiveCell({row,col});};/* Switches direction of puzzle if clicked on current cell */const handleMouseDown=(row,col)=>{if(activeCell.row===row&&activeCell.col===col){setDirection(!direction);}// console.log(\"??\")\n};/* Checks if the new letter is a letter, otherwise leave empty*/const handleChange=e=>{const re=/^[A-Za-z]+$/;if(!re.test(e.target.value)){e.target.value=\"\";}};const handleKeyDown=e=>{};useEffect(()=>{async function fetchData(){var puzzleDatabase=require('./db/puzzles.json');setPuzzle(puzzleDatabase.puzzles[0].data);setLoading(false);}fetchData();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"App font-mono h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"App-body flex justify-center items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow-xl rounded-sm\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-10\",children:\"kruisje laden...\"})})})});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"App font-mono h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"App-body flex justify-center items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl my-20 font-mono\",children:\"kruisje.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow-xl rounded-xl\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto sm:-mx-6 lg:-mx-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inline-block min-w-full sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\",children:Array.from({length:size*size}).map((_,index)=>{const row=Math.floor(index/size);const col=index%size;const curLetter=puzzle[row][col];if(curLetter==\".\"){return/*#__PURE__*/_jsx(\"div\",{className:\"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\"},\"\".concat(row,\"-\").concat(col));}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"items-center border border-black bg-white\",children:/*#__PURE__*/_jsx(\"input\",{id:\"input-\".concat(row,\"-\").concat(col),className:\"p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0                                 \\n                                  \".concat(activeCell.row==row&&activeCell.col==col?\"bg-red-400 \":\"bg-white \"/* Sets the active cell to green */,\"\\n                                  \").concat(direction==HORIZONTAL&&activeCell.row==row&&activeCell.col!=col||direction==VERTICAL&&activeCell.col==col&&activeCell.row!=row?\"bg-red-200 \":\"bg-white \"/* Set active row or column to soft green */),size:\"1\",type:\"text\",maxLength:\"1\",name:\"inputCell\",onFocus:()=>handleFocus(row,col),onMouseDown:()=>handleMouseDown(row,col),onKeyDown:e=>handleKeyDown(e,row,col),onChange:e=>handleChange(e)})})},\"div-\".concat(row,\"-\").concat(col));}})})})})})})]})});}};export default App;","map":{"version":3,"names":["useState","useEffect","useRef","act","jsx","_jsx","jsxs","_jsxs","HORIZONTAL","VERTICAL","size","App","focussedCell","focussedRowCol","loading","setLoading","puzzle","setPuzzle","direction","setDirection","inputsRef","activeCell","setActiveCell","row","col","handleFocus","handleMouseDown","handleChange","e","re","test","target","value","handleKeyDown","fetchData","puzzleDatabase","require","puzzles","data","className","children","Array","from","length","map","_","index","Math","floor","curLetter","concat","id","type","maxLength","name","onFocus","onMouseDown","onKeyDown","onChange"],"sources":["C:/Users/juliu/Documents/MakeSomething/Kruisje/kruisje/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\n// Random constants\r\nconst HORIZONTAL = 0;\r\nconst VERTICAL = 1;\r\nconst size = 5;\r\n\r\nexport const App = () => {\r\n  /* Snel kleurtjes aanpassen */\r\n  const focussedCell = `bg-orange-400`\r\n  const focussedRowCol = `bg-orange-200`\r\n\r\n  /* ---------------- Constants ---------------- */\r\n  const [loading, setLoading] = useState(true);\r\n  const [puzzle, setPuzzle] = useState();\r\n  const [direction, setDirection] = useState(HORIZONTAL); // 0 = Horizontal, 1 = Vertical\r\n  const inputsRef = useRef([]); // om refs naar alle inputs op te slaan\r\n  const [activeCell, setActiveCell] = useState({\r\n    row: null,\r\n    col: null,\r\n  });\r\n\r\n  /* ---------------- Functions ---------------- */\r\n  \r\n  /* Sets new active cell after new focus */\r\n  const handleFocus = (row, col) => {\r\n    setActiveCell({ row, col });\r\n  };\r\n\r\n  /* Switches direction of puzzle if clicked on current cell */\r\n  const handleMouseDown = (row, col) => {\r\n    if (activeCell.row === row && activeCell.col === col) {\r\n      setDirection(!direction)\r\n    }\r\n    // console.log(\"??\")\r\n  }\r\n\r\n  /* Checks if the new letter is a letter, otherwise leave empty*/\r\n  const handleChange = (e) => {\r\n    const re = /^[A-Za-z]+$/;\r\n\r\n    if (!re.test(e.target.value)) {\r\n      e.target.value = \"\"\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      var puzzleDatabase = require('./db/puzzles.json');\r\n      setPuzzle(puzzleDatabase.puzzles[0].data)\r\n      setLoading(false);\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='bg-white shadow-xl rounded-sm'>\r\n            <div className=\"p-10\">\r\n              kruisje laden...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='text-4xl my-20 font-mono'>\r\n            kruisje.\r\n          </div>\r\n          <div className='bg-white shadow-xl rounded-xl'>\r\n            <div className=\"flex flex-col\">\r\n              <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                <div className=\"inline-block min-w-full sm:px-6 lg:px-8\">\r\n                  <div className=\"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\">\r\n                    {Array.from({ length: size * size }).map((_, index) => {\r\n                      const row = Math.floor(index / size);\r\n                      const col = index % size;\r\n                      const curLetter = puzzle[row][col]\r\n\r\n                      if (curLetter == \".\") {\r\n                        return (\r\n                          <div\r\n                            key={`${row}-${col}`}\r\n                            className=\"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\">\r\n                          </div>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            key={`div-${row}-${col}`}>\r\n                            <div\r\n                              className='items-center border border-black bg-white'>\r\n                              <input\r\n                                id={`input-${row}-${col}`}\r\n                                className={`p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0                                 \r\n                                  ${activeCell.row == row && activeCell.col == col\r\n                                    ? \"bg-red-400 \"\r\n                                    : \"bg-white \"\r\n                                  /* Sets the active cell to green */\r\n                                  }\r\n                                  ${(direction == HORIZONTAL && activeCell.row == row && activeCell.col != col) ||\r\n                                    direction == VERTICAL && activeCell.col == col && activeCell.row != row\r\n                                    ? \"bg-red-200 \"\r\n                                    : \"bg-white \"\r\n                                  /* Set active row or column to soft green */\r\n                                  }`}\r\n                                size=\"1\"\r\n                                type=\"text\"\r\n                                maxLength=\"1\"\r\n                                name=\"inputCell\"\r\n                                onFocus={() => handleFocus(row, col)}\r\n                                onMouseDown={() => handleMouseDown(row, col)}\r\n                                onKeyDown={(e) => handleKeyDown(e, row, col)}\r\n                                onChange={(e) => handleChange(e)}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}