{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Documents\\\\MakeSomething\\\\Kruisje\\\\kruisje\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { act } from 'react-dom/test-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HORIZONTAL = 0;\nconst VERTICAL = 1;\nexport const App = () => {\n  _s();\n  // Variables\n  const [loading, setLoading] = useState(true);\n  const [puzzle, setPuzzle] = useState();\n  const [direction, setDirection] = useState(HORIZONTAL); //0 = horizontal, 1=vertical\n  const [activeCell, setActiveCell] = useState({\n    row: null,\n    col: null\n  });\n  // const inputsRef = useRef([]); // om refs naar alle inputs op te slaan\n\n  const size = 5;\n  const handleFocus = (row, col) => {\n    // alleen active cel bijwerken, direction blijft zoals hij is\n    setActiveCell(prev => ({\n      ...prev,\n      row,\n      col\n    }));\n  };\n  const handleClick = (row, col) => {\n    // console.log(e)\n    if (activeCell && activeCell.row === row && activeCell.col === col) {\n      setDirection(!direction);\n    }\n  };\n\n  // logs new cells\n  // useEffect(() => {\n  // console.log(\"Nieuwe actieve cel:\", activeCell);\n  // }, [activeCell]);\n\n  // const handleKeyDown = (e, row, col) => {\n  //   let newRow = row;\n  //   let newCol = col;\n\n  //   if (e.key === \"ArrowUp\") newRow = row - 1;\n  //   if (e.key === \"ArrowDown\") newRow = row + 1;\n  //   if (e.key === \"ArrowLeft\") newCol = col - 1;\n  //   if (e.key === \"ArrowRight\") newCol = col + 1;\n\n  //   console.log(\"Next:\", newRow, newCol);\n  //   setActiveCell({newRow, newCol});\n\n  //   // if (newRow !== row || newCol !== col) {\n  //   //   e.preventDefault(); // standaard cursor beweging voorkomen\n  //   //   const nextInput = inputsRef.current[`${newRow}-${newCol}`];\n  //   //   if (nextInput) nextInput.focus();\n  //   // }\n  // };\n\n  useEffect(() => {\n    async function fetchData() {\n      var puzzleDatabase = require('./db/puzzles.json');\n      setPuzzle(puzzleDatabase.puzzles[0].data);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-col shadow text-xs bg-white rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-8 items-center\",\n        children: \"Laden....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App font-mono h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body flex justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl my-20 font-mono\",\n          children: \"kruisje.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow-xl rounded-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto sm:-mx-6 lg:-mx-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline-block min-w-full sm:px-6 lg:px-8\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\",\n                  children: Array.from({\n                    length: size * size\n                  }).map((_, index) => {\n                    const row = Math.floor(index / size);\n                    const col = index % size;\n                    const curLetter = puzzle[row][col];\n                    if (curLetter == \".\") {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\"\n                      }, `${row}-${col}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 27\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"items-center border border-black bg-white\",\n                          children: /*#__PURE__*/_jsxDEV(\"input\", {\n                            id: `input-${row}-${col}`,\n                            className: `p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0                                 \n                                  ${activeCell.row == row && activeCell.col == col ? \"bg-green-400 \" : \"bg-white \"\n                            /* Sets the active cell to green */}\n                                  ${direction == HORIZONTAL && activeCell.row == row && activeCell.col != col || direction == VERTICAL && activeCell.col == col && activeCell.row != row ? \"bg-green-100 \" : \"bg-white \"\n                            /* Set active row or column to soft green */}`,\n                            size: \"1\",\n                            type: \"text\",\n                            maxLength: \"1\",\n                            name: \"inputCell\",\n                            onFocus: () => handleFocus(row, col),\n                            onClick: () => handleClick(row, col)\n                            // onBlur={() => console.log(\"Previous:\", row, col)}\n                            //  onKeyDown={(e) => handleKeyDown(e, row, col)}\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 105,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 29\n                        }, this)\n                      }, `div-${row}-${col}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 27\n                      }, this);\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"NzyMdHwCI5IF1gcCrzcav78VJKU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","act","jsxDEV","_jsxDEV","HORIZONTAL","VERTICAL","App","_s","loading","setLoading","puzzle","setPuzzle","direction","setDirection","activeCell","setActiveCell","row","col","size","handleFocus","prev","handleClick","fetchData","puzzleDatabase","require","puzzles","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","index","Math","floor","curLetter","id","type","maxLength","name","onFocus","onClick","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Documents/MakeSomething/Kruisje/kruisje/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\n\r\nconst HORIZONTAL = 0;\r\nconst VERTICAL = 1;\r\n\r\nexport const App = () => {\r\n  // Variables\r\n  const [loading, setLoading] = useState(true);\r\n  const [puzzle, setPuzzle] = useState();\r\n  const [direction, setDirection] = useState(HORIZONTAL); //0 = horizontal, 1=vertical\r\n  const [activeCell, setActiveCell] = useState({\r\n    row: null,\r\n    col: null,\r\n  });\r\n  // const inputsRef = useRef([]); // om refs naar alle inputs op te slaan\r\n\r\n  const size = 5;\r\n\r\n  const handleFocus = (row, col) => {\r\n    // alleen active cel bijwerken, direction blijft zoals hij is\r\n    setActiveCell((prev) => ({ ...prev, row, col }));\r\n  };\r\n\r\n  const handleClick = (row, col) => {\r\n    // console.log(e)\r\n    if (activeCell && activeCell.row === row && activeCell.col === col) {\r\n      setDirection(!direction)\r\n    }\r\n  }\r\n\r\n  // logs new cells\r\n  // useEffect(() => {\r\n  // console.log(\"Nieuwe actieve cel:\", activeCell);\r\n  // }, [activeCell]);\r\n\r\n  // const handleKeyDown = (e, row, col) => {\r\n  //   let newRow = row;\r\n  //   let newCol = col;\r\n\r\n  //   if (e.key === \"ArrowUp\") newRow = row - 1;\r\n  //   if (e.key === \"ArrowDown\") newRow = row + 1;\r\n  //   if (e.key === \"ArrowLeft\") newCol = col - 1;\r\n  //   if (e.key === \"ArrowRight\") newCol = col + 1;\r\n\r\n  //   console.log(\"Next:\", newRow, newCol);\r\n  //   setActiveCell({newRow, newCol});\r\n\r\n  //   // if (newRow !== row || newCol !== col) {\r\n  //   //   e.preventDefault(); // standaard cursor beweging voorkomen\r\n  //   //   const nextInput = inputsRef.current[`${newRow}-${newCol}`];\r\n  //   //   if (nextInput) nextInput.focus();\r\n  //   // }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      var puzzleDatabase = require('./db/puzzles.json');\r\n      setPuzzle(puzzleDatabase.puzzles[0].data)\r\n      setLoading(false);\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center flex-col shadow text-xs bg-white rounded-md\">\r\n        <div className=\"px-6 py-8 items-center\">\r\n          Laden....\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='text-4xl my-20 font-mono'>\r\n            kruisje.\r\n          </div>\r\n          <div className='bg-white shadow-xl rounded-xl'>\r\n            <div className=\"flex flex-col\">\r\n              <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                <div className=\"inline-block min-w-full sm:px-6 lg:px-8\">\r\n                  <div className=\"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\">\r\n                    {Array.from({ length: size * size }).map((_, index) => {\r\n                      const row = Math.floor(index / size);\r\n                      const col = index % size;\r\n                      const curLetter = puzzle[row][col]\r\n\r\n                      if (curLetter == \".\") {\r\n                        return (\r\n                          <div\r\n                            key={`${row}-${col}`}\r\n                            className=\"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\">\r\n                          </div>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            key={`div-${row}-${col}`}>\r\n                            <div\r\n                              className='items-center border border-black bg-white'>\r\n                              <input\r\n                                id={`input-${row}-${col}`}\r\n                                className={`p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0                                 \r\n                                  ${activeCell.row == row && activeCell.col == col\r\n                                    ? \"bg-green-400 \"\r\n                                    : \"bg-white \"\r\n                                  /* Sets the active cell to green */\r\n                                  }\r\n                                  ${(direction == HORIZONTAL && activeCell.row == row && activeCell.col != col) ||\r\n                                    direction == VERTICAL && activeCell.col == col && activeCell.row != row\r\n                                    ? \"bg-green-100 \"\r\n                                    : \"bg-white \"\r\n                                  /* Set active row or column to soft green */\r\n                                  }`}\r\n                                size=\"1\"\r\n                                type=\"text\"\r\n                                maxLength=\"1\"\r\n                                name=\"inputCell\"\r\n                                onFocus={() => handleFocus(row, col)}\r\n                                onClick={() => handleClick(row, col)}\r\n                              // onBlur={() => console.log(\"Previous:\", row, col)}\r\n                              //  onKeyDown={(e) => handleKeyDown(e, row, col)}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}