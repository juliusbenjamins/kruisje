{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import'./App.css';import{act}from'react-dom/test-utils';// Random constants\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HORIZONTAL=0;const VERTICAL=1;const size=5;{/* bg-purple-400 bg-purple-200 */}export const App=()=>{/* ---------------- Constants ---------------- */const[loading,setLoading]=useState(true);const[puzzle,setPuzzle]=useState();const[direction,setDirection]=useState(HORIZONTAL);// 0 = Horizontal, 1 = Vertical\nconst inputsRef=useRef([]);// om refs naar alle inputs op te slaan\nconst[activeCell,setActiveCell]=useState({row:null,col:null});/* ---------------- Functions ---------------- *//* Sets new active cell after new focus */const handleFocus=(row,col)=>{setActiveCell({row,col});};/* Switches direction of puzzle if clicked on current cell */const handleMouseDown=(row,col)=>{if(activeCell.row===row&&activeCell.col===col){setDirection((direction+1)%2);console.log(\"new dir\",direction);}};/* Checks if the new letter is a letter, otherwise leave empty*/const handleChange=e=>{const re=/^[A-Za-z]+$/;if(!re.test(e.target.value)){e.target.value=\"\";}};const handleKeyDown=e=>{};// { <input id={input-${row}-${col}} \n// className={p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 \n//   ${\n//     activeCell.row == row && activeCell.col == col \n//     ? \"bg-purple-400 \" \n//     : \"bg-white \" /* Sets the active cell to green */ \n//   } \n//   ${\n//     (direction == HORIZONTAL && activeCell.row == row && activeCell.col != col) \n//     || direction == VERTICAL && activeCell.col == col && activeCell.row != row \n//     ? \"bg-purple-200 \" \n//     : \"bg-white \" /* Set active row or column to soft green */ \n//   }} }\nconst getCellColor=(row,col)=>{if(activeCell.row===row&&activeCell.col===col){return\"bg-purple-400\";}else if(direction===HORIZONTAL&&activeCell.row===row&&activeCell.col!==col||direction===VERTICAL&&activeCell.col===col&&activeCell.row!==row){return\"bg-purple-200\";}else{return\"bg-white\";}};useEffect(()=>{async function fetchData(){var puzzleDatabase=require('./db/puzzles.json');setPuzzle(puzzleDatabase.puzzles[0].data);setLoading(false);}fetchData();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"App font-mono h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"App-body flex justify-center items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow-xl rounded-sm\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-10\",children:\"kruisje laden...\"})})})});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"App font-mono h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"App-body flex justify-center items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl my-20 font-mono\",children:\"kruisje.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow-xl rounded-xl\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto sm:-mx-6 lg:-mx-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inline-block min-w-full sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\",children:Array.from({length:size*size}).map((_,index)=>{const row=Math.floor(index/size);const col=index%size;const curLetter=puzzle[row][col];if(curLetter==\".\"){return/*#__PURE__*/_jsx(\"div\",{className:\"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\"},\"\".concat(row,\"-\").concat(col));}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"items-center border border-black\",children:/*#__PURE__*/_jsx(\"input\",{id:\"input-\".concat(row,\"-\").concat(col),className:\"p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 \\n                                  \".concat(getCellColor(row,col)),size:\"1\",type:\"text\",maxLength:\"1\",name:\"inputCell\",onFocus:()=>handleFocus(row,col),onMouseDown:()=>handleMouseDown(row,col),onKeyDown:e=>handleKeyDown(e,row,col),onChange:e=>handleChange(e)})})},\"div-\".concat(row,\"-\").concat(col));}})})})})})})]})});}};export default App;","map":{"version":3,"names":["useState","useEffect","useRef","act","jsx","_jsx","jsxs","_jsxs","HORIZONTAL","VERTICAL","size","App","loading","setLoading","puzzle","setPuzzle","direction","setDirection","inputsRef","activeCell","setActiveCell","row","col","handleFocus","handleMouseDown","console","log","handleChange","e","re","test","target","value","handleKeyDown","getCellColor","fetchData","puzzleDatabase","require","puzzles","data","className","children","Array","from","length","map","_","index","Math","floor","curLetter","concat","id","type","maxLength","name","onFocus","onMouseDown","onKeyDown","onChange"],"sources":["C:/Users/juliu/Documents/MakeSomething/Kruisje/kruisje/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\n// Random constants\r\nconst HORIZONTAL = 0;\r\nconst VERTICAL = 1;\r\nconst size = 5;\r\n\r\n{/* bg-purple-400 bg-purple-200 */ }\r\n\r\nexport const App = () => {\r\n  /* ---------------- Constants ---------------- */\r\n  const [loading, setLoading] = useState(true);\r\n  const [puzzle, setPuzzle] = useState();\r\n  const [direction, setDirection] = useState(HORIZONTAL); // 0 = Horizontal, 1 = Vertical\r\n  const inputsRef = useRef([]); // om refs naar alle inputs op te slaan\r\n  const [activeCell, setActiveCell] = useState({\r\n    row: null,\r\n    col: null,\r\n  });\r\n\r\n  /* ---------------- Functions ---------------- */\r\n\r\n  /* Sets new active cell after new focus */\r\n  const handleFocus = (row, col) => {\r\n    setActiveCell({ row, col });\r\n  };\r\n\r\n  /* Switches direction of puzzle if clicked on current cell */\r\n  const handleMouseDown = (row, col) => {\r\n    if (activeCell.row === row && activeCell.col === col) {\r\n      setDirection((direction + 1) % 2)\r\n      console.log(\"new dir\", direction)\r\n    }\r\n  }\r\n\r\n  /* Checks if the new letter is a letter, otherwise leave empty*/\r\n  const handleChange = (e) => {\r\n    const re = /^[A-Za-z]+$/;\r\n\r\n    if (!re.test(e.target.value)) {\r\n      e.target.value = \"\"\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n\r\n  }\r\n\r\n// { <input id={input-${row}-${col}} \r\n// className={p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 \r\n//   ${\r\n//     activeCell.row == row && activeCell.col == col \r\n//     ? \"bg-purple-400 \" \r\n//     : \"bg-white \" /* Sets the active cell to green */ \r\n//   } \r\n//   ${\r\n//     (direction == HORIZONTAL && activeCell.row == row && activeCell.col != col) \r\n//     || direction == VERTICAL && activeCell.col == col && activeCell.row != row \r\n//     ? \"bg-purple-200 \" \r\n//     : \"bg-white \" /* Set active row or column to soft green */ \r\n//   }} }\r\n\r\n  const getCellColor = (row, col) => {\r\n    if (activeCell.row === row && activeCell.col === col) { \r\n      return \"bg-purple-400\";\r\n    } else if ( (direction === HORIZONTAL && activeCell.row === row && activeCell.col !== col) ||\r\n      (direction === VERTICAL && activeCell.col === col && activeCell.row !== row)) { \r\n      return \"bg-purple-200\"; \r\n    } else {\r\n      return \"bg-white\";\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      var puzzleDatabase = require('./db/puzzles.json');\r\n      setPuzzle(puzzleDatabase.puzzles[0].data)\r\n      setLoading(false);\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='bg-white shadow-xl rounded-sm'>\r\n            <div className=\"p-10\">\r\n              kruisje laden...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='text-4xl my-20 font-mono'>\r\n            kruisje.\r\n          </div>\r\n          <div className='bg-white shadow-xl rounded-xl'>\r\n            <div className=\"flex flex-col\">\r\n              <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                <div className=\"inline-block min-w-full sm:px-6 lg:px-8\">\r\n                  <div className=\"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\">\r\n                    {\r\n                    Array.from({ length: size * size }).map((_, index) => {\r\n                      const row = Math.floor(index / size);\r\n                      const col = index % size;\r\n                      const curLetter = puzzle[row][col]\r\n\r\n                      if (curLetter == \".\") {\r\n                        return (\r\n                          <div\r\n                            key={`${row}-${col}`}\r\n                            className=\"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\">\r\n                          </div>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            key={`div-${row}-${col}`}>\r\n                            <div\r\n                              className='items-center border border-black'>\r\n                              <input\r\n                                id={`input-${row}-${col}`}\r\n                                className={`p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 \r\n                                  ${getCellColor(row, col)}`}\r\n                                size=\"1\"\r\n                                type=\"text\"\r\n                                maxLength=\"1\"\r\n                                name=\"inputCell\"\r\n                                onFocus={() => handleFocus(row, col)}\r\n                                onMouseDown={() => handleMouseDown(row, col)}\r\n                                onKeyDown={(e) => handleKeyDown(e, row, col)}\r\n                                onChange={(e) => handleChange(e)}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}