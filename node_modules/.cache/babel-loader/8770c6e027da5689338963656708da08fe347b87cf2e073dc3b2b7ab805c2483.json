{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juliu\\\\Documents\\\\MakeSomething\\\\Kruisje\\\\kruisje\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { act } from 'react-dom/test-utils';\n\n// Random constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HORIZONTAL = 0;\nconst VERTICAL = 1;\nconst size = 5;\n{/* bg-purple-400 bg-purple-200 */}\nexport const App = () => {\n  _s();\n  /* ---------------- Constants ---------------- */\n  const [loading, setLoading] = useState(true);\n  const [puzzle, setPuzzle] = useState();\n  const [direction, setDirection] = useState(HORIZONTAL); // 0 = Horizontal, 1 = Vertical\n  const inputsRef = useRef([]); // om refs naar alle inputs op te slaan\n  const [activeCell, setActiveCell] = useState({\n    row: null,\n    col: null\n  });\n\n  /* ---------------- Functions ---------------- */\n\n  /* Sets new active cell after new focus */\n  const handleFocus = (row, col) => {\n    setActiveCell({\n      row,\n      col\n    });\n  };\n\n  /* Switches direction of puzzle if clicked on current cell */\n  const handleMouseDown = (row, col) => {\n    if (activeCell.row === row && activeCell.col === col) {\n      setDirection(!direction);\n    }\n    // console.log(\"??\")\n  };\n\n  /* Checks if the new letter is a letter, otherwise leave empty*/\n  const handleChange = e => {\n    const re = /^[A-Za-z]+$/;\n    if (!re.test(e.target.value)) {\n      e.target.value = \"\";\n    }\n  };\n  const handleKeyDown = e => {};\n\n  // { <input id={input-${row}-${col}} \n  // className={p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 \n  //   ${\n  //     activeCell.row == row && activeCell.col == col \n  //     ? \"bg-purple-400 \" \n  //     : \"bg-white \" /* Sets the active cell to green */ \n  //   } \n  //   ${\n  //     (direction == HORIZONTAL && activeCell.row == row && activeCell.col != col) \n  //     || direction == VERTICAL && activeCell.col == col && activeCell.row != row \n  //     ? \"bg-purple-200 \" \n  //     : \"bg-white \" /* Set active row or column to soft green */ \n  //   }} }\n\n  const getCellColor = (row, col) => {\n    if (activeCell.row === row && activeCell.col === col) {\n      console.log(row, col);\n      return \"bg-purple-400\";\n    } else if (direction === \"HORIZONTAL\" && activeCell.row === row && activeCell.col !== col || direction === \"VERTICAL\" && activeCell.col === col && activeCell.row !== row) {\n      console.log(row, col);\n      return \"bg-purple-200\";\n    } else {\n      return \"bg-white\";\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      var puzzleDatabase = require('./db/puzzles.json');\n      setPuzzle(puzzleDatabase.puzzles[0].data);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App font-mono h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body flex justify-center items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow-xl rounded-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-10\",\n            children: \"kruisje laden...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App font-mono h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body flex justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl my-20 font-mono\",\n          children: \"kruisje.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow-xl rounded-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto sm:-mx-6 lg:-mx-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline-block min-w-full sm:px-6 lg:px-8\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\",\n                  children: Array.from({\n                    length: size * size\n                  }).map((_, index) => {\n                    const row = Math.floor(index / size);\n                    const col = index % size;\n                    const curLetter = puzzle[row][col];\n                    if (curLetter == \".\") {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\"\n                      }, `${row}-${col}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 27\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"items-center border border-black\",\n                          children: /*#__PURE__*/_jsxDEV(\"input\", {\n                            id: `input-${row}-${col}`,\n                            className: `p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 ${getCellColor(row, col)}`,\n                            size: \"1\",\n                            type: \"text\",\n                            maxLength: \"1\",\n                            name: \"inputCell\",\n                            onFocus: () => handleFocus(row, col),\n                            onMouseDown: () => handleMouseDown(row, col),\n                            onKeyDown: e => handleKeyDown(e, row, col),\n                            onChange: e => handleChange(e)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 130,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 29\n                        }, this)\n                      }, `div-${row}-${col}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 27\n                      }, this);\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"rL07lczNmU5/qGuo6XO6Cdqkg4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","act","jsxDEV","_jsxDEV","HORIZONTAL","VERTICAL","size","App","_s","loading","setLoading","puzzle","setPuzzle","direction","setDirection","inputsRef","activeCell","setActiveCell","row","col","handleFocus","handleMouseDown","handleChange","e","re","test","target","value","handleKeyDown","getCellColor","console","log","fetchData","puzzleDatabase","require","puzzles","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","index","Math","floor","curLetter","id","type","maxLength","name","onFocus","onMouseDown","onKeyDown","onChange","_c","$RefreshReg$"],"sources":["C:/Users/juliu/Documents/MakeSomething/Kruisje/kruisje/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\n// Random constants\r\nconst HORIZONTAL = 0;\r\nconst VERTICAL = 1;\r\nconst size = 5;\r\n\r\n{/* bg-purple-400 bg-purple-200 */ }\r\n\r\nexport const App = () => {\r\n  /* ---------------- Constants ---------------- */\r\n  const [loading, setLoading] = useState(true);\r\n  const [puzzle, setPuzzle] = useState();\r\n  const [direction, setDirection] = useState(HORIZONTAL); // 0 = Horizontal, 1 = Vertical\r\n  const inputsRef = useRef([]); // om refs naar alle inputs op te slaan\r\n  const [activeCell, setActiveCell] = useState({\r\n    row: null,\r\n    col: null,\r\n  });\r\n\r\n  /* ---------------- Functions ---------------- */\r\n\r\n  /* Sets new active cell after new focus */\r\n  const handleFocus = (row, col) => {\r\n    setActiveCell({ row, col });\r\n  };\r\n\r\n  /* Switches direction of puzzle if clicked on current cell */\r\n  const handleMouseDown = (row, col) => {\r\n    if (activeCell.row === row && activeCell.col === col) {\r\n      setDirection(!direction)\r\n    }\r\n    // console.log(\"??\")\r\n  }\r\n\r\n  /* Checks if the new letter is a letter, otherwise leave empty*/\r\n  const handleChange = (e) => {\r\n    const re = /^[A-Za-z]+$/;\r\n\r\n    if (!re.test(e.target.value)) {\r\n      e.target.value = \"\"\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n\r\n  }\r\n\r\n// { <input id={input-${row}-${col}} \r\n// className={p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 \r\n//   ${\r\n//     activeCell.row == row && activeCell.col == col \r\n//     ? \"bg-purple-400 \" \r\n//     : \"bg-white \" /* Sets the active cell to green */ \r\n//   } \r\n//   ${\r\n//     (direction == HORIZONTAL && activeCell.row == row && activeCell.col != col) \r\n//     || direction == VERTICAL && activeCell.col == col && activeCell.row != row \r\n//     ? \"bg-purple-200 \" \r\n//     : \"bg-white \" /* Set active row or column to soft green */ \r\n//   }} }\r\n\r\n  const getCellColor = (row, col) => {\r\n    if (activeCell.row === row && activeCell.col === col) {\r\n      console.log(row, col) \r\n      return \"bg-purple-400\";\r\n    } else if ( (direction === \"HORIZONTAL\" && activeCell.row === row && activeCell.col !== col) ||\r\n      (direction === \"VERTICAL\" && activeCell.col === col && activeCell.row !== row)) {\r\n      console.log(row, col) \r\n      return \"bg-purple-200\"; \r\n    } else {\r\n      return \"bg-white\";\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      var puzzleDatabase = require('./db/puzzles.json');\r\n      setPuzzle(puzzleDatabase.puzzles[0].data)\r\n      setLoading(false);\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='bg-white shadow-xl rounded-sm'>\r\n            <div className=\"p-10\">\r\n              kruisje laden...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"App font-mono h-screen\">\r\n        <div className='App-body flex justify-center items-center'>\r\n          <div className='text-4xl my-20 font-mono'>\r\n            kruisje.\r\n          </div>\r\n          <div className='bg-white shadow-xl rounded-xl'>\r\n            <div className=\"flex flex-col\">\r\n              <div className=\"overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                <div className=\"inline-block min-w-full sm:px-6 lg:px-8\">\r\n                  <div className=\"overflow-hidden grid grid-cols-5 grid-rows-5 border border-black\">\r\n                    {Array.from({ length: size * size }).map((_, index) => {\r\n                      const row = Math.floor(index / size);\r\n                      const col = index % size;\r\n                      const curLetter = puzzle[row][col]\r\n\r\n                      if (curLetter == \".\") {\r\n                        return (\r\n                          <div\r\n                            key={`${row}-${col}`}\r\n                            className=\"p-6 px-8 text-2xl flex justify-center items-center border bg-black border-black\">\r\n                          </div>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <div\r\n                            key={`div-${row}-${col}`}>\r\n                            <div\r\n                              className='items-center border border-black'>\r\n                              <input\r\n                                id={`input-${row}-${col}`}\r\n                                className={`p-4 sm:p-6 md:px-8 text-center text-3xl uppercase focus:outline-none focus:ring-0 ${getCellColor(row, col)}`}\r\n                                size=\"1\"\r\n                                type=\"text\"\r\n                                maxLength=\"1\"\r\n                                name=\"inputCell\"\r\n                                onFocus={() => handleFocus(row, col)}\r\n                                onMouseDown={() => handleMouseDown(row, col)}\r\n                                onKeyDown={(e) => handleKeyDown(e, row, col)}\r\n                                onChange={(e) => handleChange(e)}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}